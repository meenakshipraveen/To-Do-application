/**
 * Component-specific CSS for To-Do List Application
 * Contains styles for buttons, modals, task items, and other UI components
 */

/* Button Components */
.btn {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: var(--spacing-xs);
    padding: var(--spacing-md) var(--spacing-lg);
    border: 1px solid transparent;
    border-radius: var(--radius-md);
    font-size: 0.875rem;
    font-weight: 600;
    text-decoration: none;
    cursor: pointer;
    transition: all var(--transition-fast);
    white-space: nowrap;
    user-select: none;
    min-height: 40px;
}

.btn:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    pointer-events: none;
}

.btn-icon {
    font-size: 1rem;
    line-height: 1;
}

/* Button Variants */
.btn-primary {
    background-color: var(--primary-color);
    color: var(--white);
    border-color: var(--primary-color);
}

.btn-primary:hover:not(:disabled) {
    background-color: var(--primary-hover);
    border-color: var(--primary-hover);
    transform: translateY(-1px);
    box-shadow: var(--shadow-md);
}

.btn-secondary {
    background-color: var(--white);
    color: var(--secondary-color);
    border-color: var(--gray-300);
}

.btn-secondary:hover:not(:disabled) {
    background-color: var(--gray-50);
    border-color: var(--gray-400);
    color: var(--secondary-hover);
}

.btn-danger {
    background-color: var(--danger-color);
    color: var(--white);
    border-color: var(--danger-color);
}

.btn-danger:hover:not(:disabled) {
    background-color: var(--danger-hover);
    border-color: var(--danger-hover);
    transform: translateY(-1px);
    box-shadow: var(--shadow-md);
}

.btn-success {
    background-color: var(--success-color);
    color: var(--white);
    border-color: var(--success-color);
}

.btn-success:hover:not(:disabled) {
    background-color: #059669;
    border-color: #059669;
    transform: translateY(-1px);
    box-shadow: var(--shadow-md);
}

/* Button Sizes */
.btn-sm {
    padding: var(--spacing-sm) var(--spacing-md);
    font-size: 0.75rem;
    min-height: 32px;
}

.btn-lg {
    padding: var(--spacing-lg) var(--spacing-xl);
    font-size: 1rem;
    min-height: 48px;
}

/* Task List Item Component */
.task-list-item {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: var(--spacing-md);
    border-radius: var(--radius-md);
    cursor: pointer;
    transition: all var(--transition-fast);
    border: 2px solid transparent;
    margin-bottom: var(--spacing-sm);
}

.task-list-item:hover {
    background-color: var(--gray-50);
    transform: translateX(4px);
}

.task-list-item.active {
    background-color: var(--primary-light);
    border-color: var(--primary-color);
    transform: translateX(4px);
}

.task-list-info {
    flex: 1;
    min-width: 0;
}

.task-list-name {
    font-weight: 600;
    color: var(--gray-800);
    margin-bottom: var(--spacing-xs);
    word-break: break-word;
}

.task-list-meta {
    display: flex;
    gap: var(--spacing-md);
    font-size: 0.75rem;
    color: var(--gray-500);
}

.task-list-actions {
    display: flex;
    gap: var(--spacing-xs);
    opacity: 0;
    transition: opacity var(--transition-fast);
}

.task-list-item:hover .task-list-actions {
    opacity: 1;
}

/* Task Item Component */
.task-item {
    display: flex;
    align-items: flex-start;
    gap: var(--spacing-md);
    padding: var(--spacing-lg);
    border-bottom: 1px solid var(--gray-200);
    transition: all var(--transition-fast);
    background: var(--white);
}

.task-item:last-child {
    border-bottom: none;
}

.task-item:hover {
    background-color: var(--gray-50);
}

.task-item.completed {
    opacity: 0.7;
}

.task-checkbox {
    width: 20px;
    height: 20px;
    border: 2px solid var(--gray-300);
    border-radius: var(--radius-sm);
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all var(--transition-fast);
    flex-shrink: 0;
    margin-top: 2px;
}

.task-checkbox:hover {
    border-color: var(--primary-color);
    background-color: var(--primary-light);
}

.task-checkbox.checked {
    background-color: var(--success-color);
    border-color: var(--success-color);
    color: var(--white);
}

.task-checkbox.checked::after {
    content: 'âœ“';
    font-size: 12px;
    font-weight: bold;
}

.task-content {
    flex: 1;
    min-width: 0;
}

.task-title {
    font-weight: 500;
    color: var(--gray-800);
    margin-bottom: var(--spacing-xs);
    word-break: break-word;
    line-height: 1.5;
}

.task-item.completed .task-title {
    text-decoration: line-through;
    color: var(--gray-500);
}

.task-time {
    font-size: 0.875rem;
    color: var(--gray-500);
    display: flex;
    align-items: center;
    gap: var(--spacing-xs);
}

.task-time::before {
    content: 'ðŸ•’';
    font-size: 0.75rem;
}

.task-actions {
    display: flex;
    gap: var(--spacing-xs);
    opacity: 0;
    transition: opacity var(--transition-fast);
    flex-shrink: 0;
}

.task-item:hover .task-actions {
    opacity: 1;
}

/* Modal Components */
.modal {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.5);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 1000;
    opacity: 0;
    visibility: hidden;
    transition: all var(--transition-normal);
}

.modal.show {
    opacity: 1;
    visibility: visible;
}

.modal-content {
    background: var(--white);
    border-radius: var(--radius-lg);
    box-shadow: var(--shadow-xl);
    width: 90%;
    max-width: 500px;
    max-height: 90vh;
    overflow-y: auto;
    transform: scale(0.9) translateY(-20px);
    transition: transform var(--transition-normal);
}

.modal.show .modal-content {
    transform: scale(1) translateY(0);
}

.modal-header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: var(--spacing-xl);
    border-bottom: 1px solid var(--gray-200);
}

.modal-header h3 {
    font-size: 1.25rem;
    font-weight: 600;
    color: var(--gray-800);
}

.modal-close {
    background: none;
    border: none;
    font-size: 1.5rem;
    color: var(--gray-400);
    cursor: pointer;
    padding: var(--spacing-xs);
    border-radius: var(--radius-sm);
    transition: all var(--transition-fast);
    line-height: 1;
}

.modal-close:hover {
    color: var(--gray-600);
    background-color: var(--gray-100);
}

.modal-body {
    padding: var(--spacing-xl);
}

/* Toast Notifications */
.toast-container {
    position: fixed;
    top: var(--spacing-xl);
    right: var(--spacing-xl);
    z-index: 2000;
    display: flex;
    flex-direction: column;
    gap: var(--spacing-md);
    max-width: 400px;
}

.toast {
    background: var(--white);
    border-radius: var(--radius-md);
    box-shadow: var(--shadow-lg);
    padding: var(--spacing-lg);
    border-left: 4px solid var(--primary-color);
    display: flex;
    align-items: flex-start;
    gap: var(--spacing-md);
    transform: translateX(100%);
    transition: transform var(--transition-normal);
    max-width: 100%;
}

.toast.show {
    transform: translateX(0);
}

.toast.success {
    border-left-color: var(--success-color);
}

.toast.error {
    border-left-color: var(--danger-color);
}

.toast.warning {
    border-left-color: var(--warning-color);
}

.toast-icon {
    font-size: 1.25rem;
    flex-shrink: 0;
    margin-top: 2px;
}

.toast-content {
    flex: 1;
    min-width: 0;
}

.toast-title {
    font-weight: 600;
    color: var(--gray-800);
    margin-bottom: var(--spacing-xs);
}

.toast-message {
    font-size: 0.875rem;
    color: var(--gray-600);
    line-height: 1.5;
}

.toast-close {
    background: none;
    border: none;
    color: var(--gray-400);
    cursor: pointer;
    padding: var(--spacing-xs);
    border-radius: var(--radius-sm);
    transition: all var(--transition-fast);
    flex-shrink: 0;
}

.toast-close:hover {
    color: var(--gray-600);
    background-color: var(--gray-100);
}

/* Progress Bar Component */
.progress-bar {
    width: 100%;
    height: 8px;
    background-color: var(--gray-200);
    border-radius: var(--radius-sm);
    overflow: hidden;
    margin-top: var(--spacing-sm);
}

.progress-fill {
    height: 100%;
    background-color: var(--success-color);
    border-radius: var(--radius-sm);
    transition: width var(--transition-normal);
    min-width: 0;
}

/* Badge Component */
.badge {
    display: inline-flex;
    align-items: center;
    padding: var(--spacing-xs) var(--spacing-sm);
    font-size: 0.75rem;
    font-weight: 600;
    border-radius: var(--radius-sm);
    white-space: nowrap;
}

.badge-primary {
    background-color: var(--primary-light);
    color: var(--primary-color);
}

.badge-success {
    background-color: var(--success-light);
    color: var(--success-color);
}

.badge-danger {
    background-color: var(--danger-light);
    color: var(--danger-color);
}

.badge-warning {
    background-color: var(--warning-light);
    color: var(--warning-color);
}

/* Dropdown Component */
.dropdown {
    position: relative;
    display: inline-block;
}

.dropdown-menu {
    position: absolute;
    top: 100%;
    right: 0;
    background: var(--white);
    border: 1px solid var(--gray-200);
    border-radius: var(--radius-md);
    box-shadow: var(--shadow-lg);
    min-width: 150px;
    z-index: 100;
    opacity: 0;
    visibility: hidden;
    transform: translateY(-10px);
    transition: all var(--transition-fast);
}

.dropdown.show .dropdown-menu {
    opacity: 1;
    visibility: visible;
    transform: translateY(0);
}

.dropdown-item {
    display: flex;
    align-items: center;
    gap: var(--spacing-sm);
    padding: var(--spacing-md);
    color: var(--gray-700);
    text-decoration: none;
    cursor: pointer;
    transition: background-color var(--transition-fast);
    border: none;
    background: none;
    width: 100%;
    text-align: left;
    font-size: 0.875rem;
}

.dropdown-item:hover {
    background-color: var(--gray-50);
}

.dropdown-item:first-child {
    border-top-left-radius: var(--radius-md);
    border-top-right-radius: var(--radius-md);
}

.dropdown-item:last-child {
    border-bottom-left-radius: var(--radius-md);
    border-bottom-right-radius: var(--radius-md);
}

.dropdown-divider {
    height: 1px;
    background-color: var(--gray-200);
    margin: var(--spacing-xs) 0;
}

/* Responsive Adjustments for Components */
@media (max-width: 768px) {
    .toast-container {
        top: var(--spacing-md);
        right: var(--spacing-md);
        left: var(--spacing-md);
        max-width: none;
    }
    
    .modal-content {
        width: 95%;
        margin: var(--spacing-md);
    }
    
    .modal-header,
    .modal-body {
        padding: var(--spacing-lg);
    }
    
    .task-item {
        padding: var(--spacing-md);
    }
    
    .task-list-item {
        padding: var(--spacing-md);
    }
    
    .btn {
        min-height: 44px;
        padding: var(--spacing-md) var(--spacing-lg);
    }
    
    .btn-sm {
        min-height: 36px;
    }
}

@media (max-width: 480px) {
    .task-actions,
    .task-list-actions {
        opacity: 1;
    }
    
    .task-item {
        flex-direction: column;
        align-items: flex-start;
        gap: var(--spacing-md);
    }
    
    .task-checkbox {
        align-self: flex-start;
    }
    
    .task-actions {
        align-self: flex-end;
        margin-top: var(--spacing-sm);
    }
    
    .dropdown-menu {
        left: 0;
        right: 0;
        min-width: auto;
    }
}

/* Focus Styles for Accessibility */
.btn:focus,
.task-checkbox:focus,
.modal-close:focus,
.toast-close:focus,
.dropdown-item:focus {
    outline: 2px solid var(--primary-color);
    outline-offset: 2px;
}

/* High Contrast Mode Adjustments */
@media (prefers-contrast: high) {
    .task-checkbox {
        border-width: 3px;
    }
    
    .modal {
        background: rgba(0, 0, 0, 0.8);
    }
    
    .toast {
        border-left-width: 6px;
    }
}

/* Animation Classes */
.fade-in {
    animation: fadeIn var(--transition-normal) ease-in-out;
}

.fade-out {
    animation: fadeOut var(--transition-normal) ease-in-out;
}

.slide-in-right {
    animation: slideInRight var(--transition-normal) ease-out;
}

.slide-out-right {
    animation: slideOutRight var(--transition-normal) ease-in;
}

@keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
}

@keyframes fadeOut {
    from { opacity: 1; }
    to { opacity: 0; }
}

@keyframes slideInRight {
    from { transform: translateX(100%); }
    to { transform: translateX(0); }
}

@keyframes slideOutRight {
    from { transform: translateX(0); }
    to { transform: translateX(100%); }
}
